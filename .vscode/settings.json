{
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.nosetestsEnabled": false,
    "python.testing.pytestArgs": [
        "tests"
    ],
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    "python.analysis.typeCheckingMode": "basic",
    
    "flake8.enabled": true,
    "flake8.args": [
        "--max-line-length=88",
        "--extend-ignore=E203",
        "--exclude=.git,__pycache__,build,dist"
    ],
    "flake8.importStrategy": "useBundled",
    "flake8.cwd": "${workspaceFolder}",
    "flake8.showNotifications": "onError",
    "flake8.severity": {
        "E": "Error",
        "F": "Error",
        "I": "Information",
        "W": "Warning"
    },
    
    "black-formatter.args": [
        "--line-length=88"
    ],
    "black-formatter.importStrategy": "useBundled",
    "black-formatter.showNotifications": "onError",
    "black-formatter.cwd": "${workspaceFolder}",
    
    "mypy-type-checker.enabled": true,
    "mypy-type-checker.args": [
        "--config-file=${workspaceFolder}/setup.cfg"
    ],
    "mypy-type-checker.importStrategy": "useBundled",
    "mypy-type-checker.cwd": "${workspaceFolder}",
    "mypy-type-checker.reportingScope": "workspace",
    "mypy-type-checker.showNotifications": "onError",
    "mypy-type-checker.severity": {
        "error": "Error",
        "note": "Information"
    }
}
